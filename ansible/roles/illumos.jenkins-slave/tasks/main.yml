---
- name: assert required variables are defined
  assert:
    that:
      - jenkins_slave_name != "example-slave-name"
      - jenkins_master_url != "http://jenkins.example.com"

- name: ensure the jenkins group is present
  group:
    name: "{{ jenkins_group }}"
    state: present

- name: create root home directory
  file:
    path: /export/home
    owner: root
    group: root
    state: directory
    mode: 0755

- name: ensure the jenkins user is present
  user:
    name: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    home: /export/home/jenkins
    createhome: yes
    state: present

- name: ensure jenkins user has password-less sudo access
  lineinfile:
    dest: "/etc/sudoers.d/{{ jenkins_user }}"
    line: "{{ jenkins_user }} ALL=(ALL) NOPASSWD: ALL"
    owner: root
    group: root
    mode: 0644
    create: true

- name: disable ssh host key checking
  blockinfile:
    dest: /etc/ssh/ssh_config
    block: |
      Host *
        StrictHostKeyChecking no
        UserKnownHostsFile /dev/null

- name: create jenkins directories
  file:
    path: "{{ item }}"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    state: directory
    mode: 0755
  with_items:
    - "{{ jenkins_directory }}"
    - "{{ jenkins_directory }}/root"

#
# We store a local copy of the swarm client in the repository to eliminate
# our dependency from the upstream source. The file was downloaded from:
#
#     https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/2.2/swarm-client-2.2-jar-with-dependencies.jar
#
- name: copy swarm client
  copy:
    src: var/jenkins/swarm-client-2.2-jar-with-dependencies.jar
    dest: "{{ jenkins_directory }}/swarm-client.jar"
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
    mode: 0644

- name: copy jenkins slave connect script
  template:
    src: "var/jenkins/jenkins-slave-connect.j2"
    dest: "{{ jenkins_directory }}/jenkins-slave-connect"
    mode: 0755
    owner: "{{ jenkins_user }}"
    group: "{{ jenkins_group }}"
  with_items:
    - jenkins-slave-connect

- name: ensure supervisord package is present
  easy_install:
    name: supervisor
    state: latest

- name: copy supervisord configuration file
  copy:
    dest: '/etc/supervisord.conf'
    owner: root
    group: root
    mode: 0644
    content: |
      [unix_http_server]
      file=/var/run/supervisor.sock

      [supervisord]
      logfile=/var/log/supervisord.log
      pidfile=/var/run/supervisord.pid

      [rpcinterface:supervisor]
      supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

      [supervisorctl]
      serverurl=unix:///var/run/supervisor.sock

      [program:jenkins-slave]
      command={{ jenkins_directory }}/jenkins-slave-connect
      user=jenkins
      autostart=true
      redirect_stderr=true
      stdout_logfile=/var/log/jenkins-slave.log

- name: start supervisord
  command: supervisord -c /etc/supervisord.conf
  args:
    creates: /var/run/supervisor.sock
